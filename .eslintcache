[{"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\index.js":"1","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\reportWebVitals.js":"2","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\asset\\icons\\index.js":"3","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\AppTop.js":"4","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\contexts\\AppContext.js":"5","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\router.jsx":"6","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\index.js":"7","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\index.js":"8","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\Footer.jsx":"9","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\InputName.jsx":"10","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\Header.jsx":"11","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\InputEmail.jsx":"12","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SignIn.jsx":"13","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\InputPassword.jsx":"14","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SignUp.jsx":"15","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Favorite.jsx":"16","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Home.jsx":"17","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Sign.jsx":"18","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\HeaderSearch.jsx":"19","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\index.js":"20","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SearchButton.jsx":"21","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\ClearButton.jsx":"22","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\AccountButton.jsx":"23","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SignButton.jsx":"24","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\index.js":"25","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\users.js":"26","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\initalState.js":"27","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SlidShow.jsx":"28","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SearchForm.jsx":"29","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SliderNextButton.jsx":"30","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SliderBackButton.jsx":"31","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\Xslider.jsx":"32","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\index.js":"33","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\XsliderBox.jsx":"34","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\CastSliderBox.jsx":"35","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\PieChart.jsx":"36","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\search.js":"37","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\movie.js":"38","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\common.js":"39","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\tv.js":"40","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SwitchButton.jsx":"41","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\hoge.js":"42","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Search.jsx":"43","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\Movie.jsx":"44","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\Tv.jsx":"45","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\Cast.jsx":"46","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\index.js":"47","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\index.js":"48","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\index.js":"49","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\SearchCast.jsx":"50","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\ArchiveCast.jsx":"51","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\ArchiveMovie.jsx":"52","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\ArchiveTv.jsx":"53","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\SearchTv.jsx":"54","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\SearchMovie.jsx":"55","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\MoreButton.jsx":"56","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\SearchALL.jsx":"57","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\cast.js":"58"},{"size":507,"mtime":1612611279459,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":228,"mtime":1612186438872,"results":"62","hashOfConfig":"60"},{"size":2539,"mtime":1612967233186,"results":"63","hashOfConfig":"60"},{"size":109,"mtime":1612361110045,"results":"64","hashOfConfig":"60"},{"size":1140,"mtime":1613125527091,"results":"65","hashOfConfig":"60"},{"size":512,"mtime":1612862948682,"results":"66","hashOfConfig":"60"},{"size":168,"mtime":1613090031806,"results":"67","hashOfConfig":"60"},{"size":489,"mtime":1612188565274,"results":"68","hashOfConfig":"60"},{"size":486,"mtime":1612342784143,"results":"69","hashOfConfig":"60"},{"size":1963,"mtime":1613121199367,"results":"70","hashOfConfig":"60"},{"size":490,"mtime":1612342775196,"results":"71","hashOfConfig":"60"},{"size":1389,"mtime":1612364492565,"results":"72","hashOfConfig":"60"},{"size":1589,"mtime":1612856196853,"results":"73","hashOfConfig":"60"},{"size":1523,"mtime":1612354799836,"results":"74","hashOfConfig":"60"},{"size":441,"mtime":1613026070985,"results":"75","hashOfConfig":"60"},{"size":2993,"mtime":1613124052503,"results":"76","hashOfConfig":"60"},{"size":1390,"mtime":1612341619020,"results":"77","hashOfConfig":"60"},{"size":3354,"mtime":1613124795267,"results":"78","hashOfConfig":"60"},{"size":516,"mtime":1613108227828,"results":"79","hashOfConfig":"60"},{"size":604,"mtime":1612341269207,"results":"80","hashOfConfig":"60"},{"size":610,"mtime":1612341269236,"results":"81","hashOfConfig":"60"},{"size":611,"mtime":1612341269236,"results":"82","hashOfConfig":"60"},{"size":214,"mtime":1612345074015,"results":"83","hashOfConfig":"60"},{"size":317,"mtime":1613112863036,"results":"84","hashOfConfig":"60"},{"size":603,"mtime":1612367117455,"results":"85","hashOfConfig":"60"},{"size":1328,"mtime":1613124022355,"results":"86","hashOfConfig":"60"},{"size":3067,"mtime":1613124131278,"results":"87","hashOfConfig":"60"},{"size":1868,"mtime":1613119656115,"results":"88","hashOfConfig":"60"},{"size":528,"mtime":1612794826557,"results":"89","hashOfConfig":"60"},{"size":528,"mtime":1612794512791,"results":"90","hashOfConfig":"60"},{"size":1825,"mtime":1612968019609,"results":"91","hashOfConfig":"60"},{"size":170,"mtime":1612968108304,"results":"92","hashOfConfig":"60"},{"size":2586,"mtime":1613122922317,"results":"93","hashOfConfig":"60"},{"size":631,"mtime":1612805275952,"results":"94","hashOfConfig":"60"},{"size":1022,"mtime":1612863084502,"results":"95","hashOfConfig":"60"},{"size":499,"mtime":1613017950793,"results":"96","hashOfConfig":"60"},{"size":1533,"mtime":1613124386256,"results":"97","hashOfConfig":"60"},{"size":1267,"mtime":1613124452545,"results":"98","hashOfConfig":"60"},{"size":1260,"mtime":1613124397603,"results":"99","hashOfConfig":"60"},{"size":655,"mtime":1613018885693,"results":"100","hashOfConfig":"60"},{"size":873,"mtime":1613118894836,"results":"101","hashOfConfig":"60"},{"size":3605,"mtime":1613124839519,"results":"102","hashOfConfig":"60"},{"size":4964,"mtime":1613124266873,"results":"103","hashOfConfig":"60"},{"size":5183,"mtime":1613124579176,"results":"104","hashOfConfig":"60"},{"size":5204,"mtime":1613092057404,"results":"105","hashOfConfig":"60"},{"size":155,"mtime":1613094038998,"results":"106","hashOfConfig":"60"},{"size":164,"mtime":1613093383343,"results":"107","hashOfConfig":"60"},{"size":137,"mtime":1613093352215,"results":"108","hashOfConfig":"60"},{"size":2543,"mtime":1613119503472,"results":"109","hashOfConfig":"60"},{"size":5218,"mtime":1613093258495,"results":"110","hashOfConfig":"60"},{"size":2234,"mtime":1613125668691,"results":"111","hashOfConfig":"60"},{"size":5213,"mtime":1613092950039,"results":"112","hashOfConfig":"60"},{"size":2825,"mtime":1613118691013,"results":"113","hashOfConfig":"60"},{"size":2841,"mtime":1613118660604,"results":"114","hashOfConfig":"60"},{"size":228,"mtime":1613107078816,"results":"115","hashOfConfig":"60"},{"size":3035,"mtime":1613124741963,"results":"116","hashOfConfig":"60"},{"size":1029,"mtime":1613118072437,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"hlnws9",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\index.js",[],["241","242"],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\reportWebVitals.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\asset\\icons\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\AppTop.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\contexts\\AppContext.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\router.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\Footer.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\InputName.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\Header.jsx",["243"],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\InputEmail.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SignIn.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\InputPassword.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SignUp.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Favorite.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Home.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Sign.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\HeaderSearch.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SearchButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\ClearButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\AccountButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SignButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\users.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\initalState.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SlidShow.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\SearchForm.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SliderNextButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SliderBackButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\Xslider.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\XsliderBox.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\slider\\CastSliderBox.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\PieChart.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\search.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\movie.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\common.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\tv.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\SwitchButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\hoge.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\Search.jsx",["244"],"import React, { useContext, useEffect } from \"react\";\r\nimport AppContext from \"../../hooks/contexts/AppContext\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { SearchMovie } from \"./movie/\";\r\nimport { SearchTv } from \"./tv\";\r\nimport { SearchCast } from \"./cast\";\r\nimport SearchAll from \"./SearchALL\";\r\nimport theMovieDb from \"themoviedb-javascript-library\";\r\n\r\nconst Search = () => {\r\n  const { state, dispatch } = useContext(AppContext);\r\n\r\n  const string = state.search.string;\r\n\r\n  const getData = () => {\r\n    theMovieDb.search.getMovie(\r\n      { query: string },\r\n      (result) => {\r\n        dispatch({ type: \"SET_ALL_SEARCH_ITEMS\", data: JSON.parse(result) });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    theMovieDb.search.getMovie(\r\n      { query: string },\r\n      (result) => {\r\n        dispatch({ type: \"SET_MOVIE_SEARTCH_ITEMS\", data: JSON.parse(result) });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    theMovieDb.search.getTv(\r\n      { query: string },\r\n      (result) => {\r\n        dispatch({ type: \"SET_TV_SEARTCH_ITEMS\", data: JSON.parse(result) });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    theMovieDb.search.getPerson(\r\n      { query: string },\r\n      (result) => {\r\n        dispatch({ type: \"SET_CAST_SEARTCH_ITEMS\", data: JSON.parse(result) });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(getData, [state.search.string]);\r\n\r\n  return (\r\n    <main id='Search' className='Search'>\r\n      <div className='SearchResult'>\r\n        <p className='SearchResult__string'>{state.search.string}</p>\r\n        <p className='SearchResult__result'>\r\n          Total {state.common.searchItems.totalResult || \"\"}\r\n        </p>\r\n      </div>\r\n      <div className='archiveContainer twoColoum'>\r\n        {/* サイド */}\r\n        <div className='twoColoum__side'>\r\n          <aside className='fixed-aside'>\r\n            <h3>検索結果</h3>\r\n            <ul className='fixed-aside__list'>\r\n              <Link to='/search/all'>\r\n                <li className='fixed-aside__list--row'>\r\n                  ALL\r\n                  <span>{state.common.searchItems.totalResult || \"0\"}</span>\r\n                </li>\r\n              </Link>\r\n              <Link to='/search/movie'>\r\n                <li className='fixed-aside__list--row'>\r\n                  MOVIE\r\n                  <span>{state.movie.searchItems.totalResult || \"0\"}</span>\r\n                </li>\r\n              </Link>\r\n              <Link to='/search/tv'>\r\n                <li className='fixed-aside__list--row'>\r\n                  TV\r\n                  <span>{state.tv.searchItems.totalResult || \"0\"}</span>\r\n                </li>\r\n              </Link>\r\n              <Link to='/search/cast'>\r\n                <li className='fixed-aside__list--row'>\r\n                  CAST\r\n                  <span>{state.cast.searchItems.totalResult || \"0\"}</span>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n          </aside>\r\n        </div>\r\n\r\n        {/* メイン */}\r\n        <div className='twoColoum__main search__contents'>\r\n          <Route path='/search/all'>\r\n            <SearchAll />\r\n          </Route>\r\n          <Route path='/search/tv'>\r\n            <SearchTv />\r\n          </Route>\r\n          <Route path='/search/movie'>\r\n            <SearchMovie />\r\n          </Route>\r\n          <Route path='/search/cast'>\r\n            <SearchCast />\r\n          </Route>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\Movie.jsx",["245"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { PieChart } from \"../../components\";\r\nimport { CastSliderBox, Xslider, XsliderBox } from \"../../components/slider\";\r\nimport AppContext from \"../../../hooks/contexts/AppContext\";\r\nimport theMovieDb from \"themoviedb-javascript-library\";\r\nimport { POSTER_342, BACKDROP_780, ChangeLanguage } from \"../../../hooks/hoge\";\r\n\r\nconst Movie = () => {\r\n  // const history = useHistory();\r\n  const { state } = useContext(AppContext);\r\n  const [movies, setMovie] = useState([]);\r\n  const [casts, setCasts] = useState(null);\r\n  const data = state.movie.viewItem;\r\n  const lang = data.original_language;\r\n  const keywords = state.common.keyword;\r\n  const style = {\r\n    backgroundImage: `url(${BACKDROP_780 + data.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right -200px top\",\r\n  };\r\n\r\n  const getMovie = () => {\r\n    theMovieDb.movies.getCredits(\r\n      { id: state.movie.viewItem.id },\r\n      (movie) => {\r\n        const cast = JSON.parse(movie);\r\n        setCasts(cast.cast);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n    theMovieDb.movies.getSimilarMovies(\r\n      { id: state.movie.viewItem.id },\r\n      (movie) => {\r\n        const movies = JSON.parse(movie);\r\n        setMovie(movies.results);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n  const windowTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(getMovie, [state]);\r\n  useEffect(windowTop, [state]);\r\n\r\n  return (\r\n    <main id='movie' className='Movie'>\r\n      <section className='Movie__firstView' style={style}>\r\n        <div className='Movie__posterWrap'>\r\n          <img src={POSTER_342 + data.poster_path} alt={data.poster_path} />\r\n        </div>\r\n\r\n        <div className='Movie__discriptionWrap'>\r\n          <div className='Movie__discriptionWrap--top'>\r\n            <h2 className='Movie__discriptionWrap--top--title'>\r\n              {data.title || data.name}movie {/* 作品タイトル */}\r\n            </h2>\r\n            <div className='Movie__discriptionWrap--top--flex'>\r\n              <span>{data.release_date}</span>\r\n              {(data.genres || []).map((genre, i) => (\r\n                <Link to={`/${genre.id}`} key={i} id={genre.id}>\r\n                  <span>{genre.name},</span>\r\n                </Link>\r\n              ))}\r\n              <span>{data.runtime + \"minits\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--mid'>\r\n            <div className='Movie__discriptionWrap--mid--score score'>\r\n              <PieChart\r\n                width={73}\r\n                height={73}\r\n                inner={30}\r\n                outer={33}\r\n                review={data.vote_average}\r\n              />\r\n              <div className='scoreCircle'>\r\n                {data.vote_average * 10}\r\n                <span className='scoreCircle__amount'>%</span>\r\n              </div>\r\n            </div>\r\n            <p>ユーザースコア</p>\r\n            <h3 className='Movie__discriptionWrap--mid--tanline'>{data.tagline}</h3>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--bottom'>\r\n            <h3 className='Movie__discriptionWrap--bottom'>概要</h3>\r\n            <p>{data.overview}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='twoColoum'>\r\n        <div className='MovieMainContents'>\r\n          <Xslider heading='キャスト'>\r\n            {(casts || []).map((cast, i) => {\r\n              return <CastSliderBox cast={cast} key={i} />;\r\n            })}\r\n          </Xslider>\r\n          <Xslider heading={`同ジャンル ${movies.length} 作品`}>\r\n            {(movies || []).map((movie, i) => {\r\n              return <XsliderBox data={movie} judge={state.common.searchType} key={i} />;\r\n            })}\r\n          </Xslider>\r\n        </div>\r\n\r\n        <aside className='m-aside'>\r\n          <dl className='m-aside__top'>\r\n            <dt>原題</dt>\r\n            <dd>{data.original_title}</dd>\r\n            <dt>公開状態</dt>\r\n            <dd>{data.status}</dd>\r\n            <dt>オリジナル言語</dt>\r\n            <dd>{ChangeLanguage(lang)}</dd>\r\n            <dt>予算</dt>\r\n            <dd>${data.budget}</dd>\r\n            <dt>収益</dt>\r\n            <dd>${data.revenue}</dd>\r\n          </dl>\r\n\r\n          <div className='m-aside__buttom'>\r\n            <h4>キーワード</h4>\r\n            <div className='m-aside__bottom--flex'>\r\n              {(keywords || []).map((key, i) => (\r\n                <Link key={i} to={key.name}>\r\n                  {key.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </main>\r\n  );\r\n  // } else {\r\n  //   return <h1>tt</h1>;\r\n  // }\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\Tv.jsx",["246"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { PieChart } from \"../../components\";\r\nimport { CastSliderBox, Xslider, XsliderBox } from \"../../components/slider\";\r\nimport AppContext from \"../../../hooks/contexts/AppContext\";\r\nimport theMovieDb from \"themoviedb-javascript-library\";\r\nimport { POSTER_342, BACKDROP_780 } from \"../../../hooks/hoge\";\r\n\r\nconst Tv = () => {\r\n  // const history = useHistory();\r\n  const { state } = useContext(AppContext);\r\n  const [movies, setMovie] = useState([]);\r\n  const [casts, setCasts] = useState(null);\r\n  const data = state.tv.viewItem;\r\n  const lang = data.original_language;\r\n  const keywords = state.tv.keyword;\r\n  let originalLanguage;\r\n  const style = {\r\n    backgroundImage: `url(${BACKDROP_780 + data.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right -200px top\",\r\n  };\r\n\r\n  const getMovie = () => {\r\n    theMovieDb.movies.getCredits(\r\n      { id: state.tv.viewItem.id },\r\n      (movie) => {\r\n        const cast = JSON.parse(movie);\r\n        setCasts(cast.cast);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n    theMovieDb.movies.getSimilarMovies(\r\n      { id: state.tv.viewItem.id },\r\n      (movie) => {\r\n        const movies = JSON.parse(movie);\r\n        setMovie(movies.results);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n  const windowTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(getMovie, [state]);\r\n  useEffect(windowTop, [state]);\r\n\r\n  if (lang === \"en\") {\r\n    originalLanguage = \"ENGLISH\";\r\n  } else if (lang === \"ja\") {\r\n    originalLanguage = \"日本語\";\r\n  } else if (lang === \"ko\") {\r\n    originalLanguage = \"韓国語\";\r\n  } else {\r\n    originalLanguage = lang;\r\n  }\r\n\r\n  return (\r\n    <main id='movie' className='Movie'>\r\n      <section className='Movie__firstView' style={style}>\r\n        <div className='Movie__posterWrap'>\r\n          <img src={POSTER_342 + data.poster_path} alt={data.poster_path} />\r\n        </div>\r\n\r\n        <div className='Movie__discriptionWrap'>\r\n          <div className='Movie__discriptionWrap--top'>\r\n            <h2 className='Movie__discriptionWrap--top--title'>\r\n              {data.title || data.name} tv {/* 作品タイトル */}\r\n            </h2>\r\n            <div className='Movie__discriptionWrap--top--flex'>\r\n              <span>{data.release_date}</span>\r\n              {(data.genres || []).map((genre, i) => (\r\n                <Link to={`/${genre.id}`} key={i} id={genre.id}>\r\n                  <span>{genre.name},</span>\r\n                </Link>\r\n              ))}\r\n              <span>{data.runtime + \"minits\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--mid'>\r\n            <div className='Movie__discriptionWrap--mid--score score'>\r\n              <PieChart\r\n                width={73}\r\n                height={73}\r\n                inner={30}\r\n                outer={33}\r\n                review={data.vote_average}\r\n              />\r\n              <div className='scoreCircle'>\r\n                {data.vote_average * 10}\r\n                <span className='scoreCircle__amount'>%</span>\r\n              </div>\r\n            </div>\r\n            <p>ユーザースコア</p>\r\n            <h3 className='Movie__discriptionWrap--mid--tanline'>{data.tagline}</h3>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--bottom'>\r\n            <h3 className='Movie__discriptionWrap--bottom'>概要</h3>\r\n            <p>{data.overview}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='twoColoum'>\r\n        <div className='MovieMainContents'>\r\n          <Xslider heading='キャスト'>\r\n            {(casts || []).map((cast, i) => {\r\n              return <CastSliderBox cast={cast} key={i} />;\r\n            })}\r\n          </Xslider>\r\n          <Xslider heading={`同ジャンル ${movies.length} 作品`}>\r\n            {(movies || []).map((movie, i) => {\r\n              return <XsliderBox data={movie} judge={state.common.searchType} key={i} />;\r\n            })}\r\n          </Xslider>\r\n        </div>\r\n\r\n        <aside className='aside'>\r\n          <dl className='aside__top'>\r\n            <dt>原題</dt>\r\n            <dd>{data.original_title}</dd>\r\n            <dt>公開状態</dt>\r\n            <dd>公開状態</dd>\r\n            <dt>オリジナル言語</dt>\r\n            <dd>{originalLanguage}</dd>\r\n            <dt>予算</dt>\r\n            <dd>${data.budget}</dd>\r\n            <dt>収益</dt>\r\n            <dd>${data.revenue}</dd>\r\n          </dl>\r\n\r\n          <div className='aside__buttom'>\r\n            <h4>キーワード</h4>\r\n            <div className='aside__bottom--flex'>\r\n              {(keywords || []).map((key, i) => (\r\n                <Link key={i} to={key.name}>\r\n                  {key.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </main>\r\n  );\r\n  // } else {\r\n  //   return <h1>tt</h1>;\r\n  // }\r\n};\r\n\r\nexport default Tv;\r\n","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\Cast.jsx",["247"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { PieChart } from \"../../components\";\r\nimport { CastSliderBox, Xslider, XsliderBox } from \"../../components/slider\";\r\nimport AppContext from \"../../../hooks/contexts/AppContext\";\r\nimport theMovieDb from \"themoviedb-javascript-library\";\r\nimport { POSTER_342, BACKDROP_780 } from \"../../../hooks/hoge\";\r\n\r\nconst Cast = () => {\r\n  // const history = useHistory();\r\n  const { state } = useContext(AppContext);\r\n  const [movies, setMovie] = useState([]);\r\n  const [casts, setCasts] = useState(null);\r\n  const data = state.common.viewItem;\r\n  const lang = data.original_language;\r\n  const keywords = state.common.keyword;\r\n  let originalLanguage;\r\n  const style = {\r\n    backgroundImage: `url(${BACKDROP_780 + data.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right -200px top\",\r\n  };\r\n\r\n  const getMovie = () => {\r\n    theMovieDb.movies.getCredits(\r\n      { id: state.common.viewItem.id },\r\n      (movie) => {\r\n        const cast = JSON.parse(movie);\r\n        setCasts(cast.cast);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n    theMovieDb.movies.getSimilarMovies(\r\n      { id: state.common.viewItem.id },\r\n      (movie) => {\r\n        const movies = JSON.parse(movie);\r\n        setMovie(movies.results);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n  const windowTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(getMovie, [state]);\r\n  useEffect(windowTop, [state]);\r\n\r\n  if (lang === \"en\") {\r\n    originalLanguage = \"ENGLISH\";\r\n  } else if (lang === \"ja\") {\r\n    originalLanguage = \"日本語\";\r\n  } else if (lang === \"ko\") {\r\n    originalLanguage = \"韓国語\";\r\n  } else {\r\n    originalLanguage = lang;\r\n  }\r\n\r\n  return (\r\n    <main id='movie' className='Movie'>\r\n      <section className='Movie__firstView' style={style}>\r\n        <div className='Movie__posterWrap'>\r\n          <img src={POSTER_342 + data.poster_path} alt={data.poster_path} />\r\n        </div>\r\n\r\n        <div className='Movie__discriptionWrap'>\r\n          <div className='Movie__discriptionWrap--top'>\r\n            <h2 className='Movie__discriptionWrap--top--title'>\r\n              {data.title || data.name} cast{/* 作品タイトル */}\r\n            </h2>\r\n            <div className='Movie__discriptionWrap--top--flex'>\r\n              <span>{data.release_date}</span>\r\n              {(data.genres || []).map((genre, i) => (\r\n                <Link to={`/${genre.id}`} key={i} id={genre.id}>\r\n                  <span>{genre.name},</span>\r\n                </Link>\r\n              ))}\r\n              <span>{data.runtime + \"minits\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--mid'>\r\n            <div className='Movie__discriptionWrap--mid--score score'>\r\n              <PieChart\r\n                width={73}\r\n                height={73}\r\n                inner={30}\r\n                outer={33}\r\n                review={data.vote_average}\r\n              />\r\n              <div className='scoreCircle'>\r\n                {data.vote_average * 10}\r\n                <span className='scoreCircle__amount'>%</span>\r\n              </div>\r\n            </div>\r\n            <p>ユーザースコア</p>\r\n            <h3 className='Movie__discriptionWrap--mid--tanline'>{data.tagline}</h3>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--bottom'>\r\n            <h3 className='Movie__discriptionWrap--bottom'>概要</h3>\r\n            <p>{data.overview}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='twoColoum'>\r\n        <div className='MovieMainContents'>\r\n          <Xslider heading='キャスト'>\r\n            {(casts || []).map((cast, i) => {\r\n              return <CastSliderBox cast={cast} key={i} />;\r\n            })}\r\n          </Xslider>\r\n          <Xslider heading={`同ジャンル ${movies.length} 作品`}>\r\n            {(movies || []).map((movie, i) => {\r\n              return <XsliderBox data={movie} judge={state.common.searchType} key={i} />;\r\n            })}\r\n          </Xslider>\r\n        </div>\r\n\r\n        <aside className='aside'>\r\n          <dl className='aside__top'>\r\n            <dt>原題</dt>\r\n            <dd>{data.original_title}</dd>\r\n            <dt>公開状態</dt>\r\n            <dd>公開状態</dd>\r\n            <dt>オリジナル言語</dt>\r\n            <dd>{originalLanguage}</dd>\r\n            <dt>予算</dt>\r\n            <dd>${data.budget}</dd>\r\n            <dt>収益</dt>\r\n            <dd>${data.revenue}</dd>\r\n          </dl>\r\n\r\n          <div className='aside__buttom'>\r\n            <h4>キーワード</h4>\r\n            <div className='aside__bottom--flex'>\r\n              {(keywords || []).map((key, i) => (\r\n                <Link key={i} to={key.name}>\r\n                  {key.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </main>\r\n  );\r\n  // } else {\r\n  //   return <h1>tt</h1>;\r\n  // }\r\n};\r\n\r\nexport default Cast;\r\n","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\index.js",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\SearchCast.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\cast\\ArchiveCast.jsx",["248"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { PieChart } from \"../../components\";\r\nimport { CastSliderBox, Xslider, XsliderBox } from \"../../components/slider\";\r\nimport AppContext from \"../../../hooks/contexts/AppContext\";\r\nimport theMovieDb from \"themoviedb-javascript-library\";\r\nimport { POSTER_342, BACKDROP_780 } from \"../../../hooks/hoge\";\r\n\r\nconst ArchiveCast = () => {\r\n  // const history = useHistory();\r\n  const { state } = useContext(AppContext);\r\n  const [movies, setMovie] = useState([]);\r\n  const [casts, setCasts] = useState(null);\r\n  const data = state.common.viewItem;\r\n  const lang = data.original_language;\r\n  const keywords = state.common.keyword;\r\n  let originalLanguage;\r\n  const style = {\r\n    backgroundImage: `url(${BACKDROP_780 + data.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right -200px top\",\r\n  };\r\n\r\n  const getMovie = () => {\r\n    theMovieDb.movies.getCredits(\r\n      { id: state.common.viewItem.id },\r\n      (movie) => {\r\n        const cast = JSON.parse(movie);\r\n        setCasts(cast.cast);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n    theMovieDb.movies.getSimilarMovies(\r\n      { id: state.common.viewItem.id },\r\n      (movie) => {\r\n        const movies = JSON.parse(movie);\r\n        setMovie(movies.results);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n  const windowTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(getMovie, [state]);\r\n  useEffect(windowTop, [state]);\r\n\r\n  if (lang === \"en\") {\r\n    originalLanguage = \"ENGLISH\";\r\n  } else if (lang === \"ja\") {\r\n    originalLanguage = \"日本語\";\r\n  } else if (lang === \"ko\") {\r\n    originalLanguage = \"韓国語\";\r\n  } else {\r\n    originalLanguage = lang;\r\n  }\r\n\r\n  return (\r\n    <main id='movie' className='Movie'>\r\n      <section className='Movie__firstView' style={style}>\r\n        <div className='Movie__posterWrap'>\r\n          <img src={POSTER_342 + data.poster_path} alt={data.poster_path} />\r\n        </div>\r\n\r\n        <div className='Movie__discriptionWrap'>\r\n          <div className='Movie__discriptionWrap--top'>\r\n            <h2 className='Movie__discriptionWrap--top--title'>\r\n              {data.title || data.name} cast{/* 作品タイトル */}\r\n            </h2>\r\n            <div className='Movie__discriptionWrap--top--flex'>\r\n              <span>{data.release_date}</span>\r\n              {(data.genres || []).map((genre, i) => (\r\n                <Link to={`/${genre.id}`} key={i} id={genre.id}>\r\n                  <span>{genre.name},</span>\r\n                </Link>\r\n              ))}\r\n              <span>{data.runtime + \"minits\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--mid'>\r\n            <div className='Movie__discriptionWrap--mid--score score'>\r\n              <PieChart\r\n                width={73}\r\n                height={73}\r\n                inner={30}\r\n                outer={33}\r\n                review={data.vote_average}\r\n              />\r\n              <div className='scoreCircle'>\r\n                {data.vote_average * 10}\r\n                <span className='scoreCircle__amount'>%</span>\r\n              </div>\r\n            </div>\r\n            <p>ユーザースコア</p>\r\n            <h3 className='Movie__discriptionWrap--mid--tanline'>{data.tagline}</h3>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--bottom'>\r\n            <h3 className='Movie__discriptionWrap--bottom'>概要</h3>\r\n            <p>{data.overview}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='twoColoum'>\r\n        <div className='MovieMainContents'>\r\n          <Xslider heading='キャスト'>\r\n            {(casts || []).map((cast, i) => {\r\n              return <CastSliderBox cast={cast} key={i} />;\r\n            })}\r\n          </Xslider>\r\n          <Xslider heading={`同ジャンル ${movies.length} 作品`}>\r\n            {(movies || []).map((movie, i) => {\r\n              return <XsliderBox data={movie} judge={state.common.searchType} key={i} />;\r\n            })}\r\n          </Xslider>\r\n        </div>\r\n\r\n        <aside className='aside'>\r\n          <dl className='aside__top'>\r\n            <dt>原題</dt>\r\n            <dd>{data.original_title}</dd>\r\n            <dt>公開状態</dt>\r\n            <dd>公開状態</dd>\r\n            <dt>オリジナル言語</dt>\r\n            <dd>{originalLanguage}</dd>\r\n            <dt>予算</dt>\r\n            <dd>${data.budget}</dd>\r\n            <dt>収益</dt>\r\n            <dd>${data.revenue}</dd>\r\n          </dl>\r\n\r\n          <div className='aside__buttom'>\r\n            <h4>キーワード</h4>\r\n            <div className='aside__bottom--flex'>\r\n              {(keywords || []).map((key, i) => (\r\n                <Link key={i} to={key.name}>\r\n                  {key.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </main>\r\n  );\r\n  // } else {\r\n  //   return <h1>tt</h1>;\r\n  // }\r\n};\r\n\r\nexport default ArchiveCast;\r\n","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\ArchiveMovie.jsx",["249","250"],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\ArchiveTv.jsx",["251"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { PieChart } from \"../../components\";\r\nimport { CastSliderBox, Xslider, XsliderBox } from \"../../components/slider\";\r\nimport AppContext from \"../../../hooks/contexts/AppContext\";\r\nimport theMovieDb from \"themoviedb-javascript-library\";\r\nimport { POSTER_342, BACKDROP_780 } from \"../../../hooks/hoge\";\r\n\r\nconst ArchiveTv = () => {\r\n  // const history = useHistory();\r\n  const { state } = useContext(AppContext);\r\n  const [movies, setMovie] = useState([]);\r\n  const [casts, setCasts] = useState(null);\r\n  const data = state.common.viewItem;\r\n  const lang = data.original_language;\r\n  const keywords = state.common.keyword;\r\n  let originalLanguage;\r\n  const style = {\r\n    backgroundImage: `url(${BACKDROP_780 + data.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"right -200px top\",\r\n  };\r\n\r\n  const getMovie = () => {\r\n    theMovieDb.movies.getCredits(\r\n      { id: state.common.viewItem.id },\r\n      (movie) => {\r\n        const cast = JSON.parse(movie);\r\n        setCasts(cast.cast);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n    theMovieDb.movies.getSimilarMovies(\r\n      { id: state.common.viewItem.id },\r\n      (movie) => {\r\n        const movies = JSON.parse(movie);\r\n        setMovie(movies.results);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // history.push(\"/\");\r\n      }\r\n    );\r\n  };\r\n  const windowTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  useEffect(getMovie, [state]);\r\n  useEffect(windowTop, [state]);\r\n\r\n  if (lang === \"en\") {\r\n    originalLanguage = \"ENGLISH\";\r\n  } else if (lang === \"ja\") {\r\n    originalLanguage = \"日本語\";\r\n  } else if (lang === \"ko\") {\r\n    originalLanguage = \"韓国語\";\r\n  } else {\r\n    originalLanguage = lang;\r\n  }\r\n\r\n  return (\r\n    <main id='movie' className='Movie'>\r\n      <section className='Movie__firstView' style={style}>\r\n        <div className='Movie__posterWrap'>\r\n          <img src={POSTER_342 + data.poster_path} alt={data.poster_path} />\r\n        </div>\r\n\r\n        <div className='Movie__discriptionWrap'>\r\n          <div className='Movie__discriptionWrap--top'>\r\n            <h2 className='Movie__discriptionWrap--top--title'>\r\n              {data.title || data.name} tv {/* 作品タイトル */}\r\n            </h2>\r\n            <div className='Movie__discriptionWrap--top--flex'>\r\n              <span>{data.release_date}</span>\r\n              {(data.genres || []).map((genre, i) => (\r\n                <Link to={`/${genre.id}`} key={i} id={genre.id}>\r\n                  <span>{genre.name},</span>\r\n                </Link>\r\n              ))}\r\n              <span>{data.runtime + \"minits\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--mid'>\r\n            <div className='Movie__discriptionWrap--mid--score score'>\r\n              <PieChart\r\n                width={73}\r\n                height={73}\r\n                inner={30}\r\n                outer={33}\r\n                review={data.vote_average}\r\n              />\r\n              <div className='scoreCircle'>\r\n                {data.vote_average * 10}\r\n                <span className='scoreCircle__amount'>%</span>\r\n              </div>\r\n            </div>\r\n            <p>ユーザースコア</p>\r\n            <h3 className='Movie__discriptionWrap--mid--tanline'>{data.tagline}</h3>\r\n          </div>\r\n\r\n          <div className='Movie__discriptionWrap--bottom'>\r\n            <h3 className='Movie__discriptionWrap--bottom'>概要</h3>\r\n            <p>{data.overview}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div className='twoColoum'>\r\n        <div className='MovieMainContents'>\r\n          <Xslider heading='キャスト'>\r\n            {(casts || []).map((cast, i) => {\r\n              return <CastSliderBox cast={cast} key={i} />;\r\n            })}\r\n          </Xslider>\r\n          <Xslider heading={`同ジャンル ${movies.length} 作品`}>\r\n            {(movies || []).map((movie, i) => {\r\n              return <XsliderBox data={movie} judge={state.common.searchType} key={i} />;\r\n            })}\r\n          </Xslider>\r\n        </div>\r\n\r\n        <aside className='aside'>\r\n          <dl className='aside__top'>\r\n            <dt>原題</dt>\r\n            <dd>{data.original_title}</dd>\r\n            <dt>公開状態</dt>\r\n            <dd>公開状態</dd>\r\n            <dt>オリジナル言語</dt>\r\n            <dd>{originalLanguage}</dd>\r\n            <dt>予算</dt>\r\n            <dd>${data.budget}</dd>\r\n            <dt>収益</dt>\r\n            <dd>${data.revenue}</dd>\r\n          </dl>\r\n\r\n          <div className='aside__buttom'>\r\n            <h4>キーワード</h4>\r\n            <div className='aside__bottom--flex'>\r\n              {(keywords || []).map((key, i) => (\r\n                <Link key={i} to={key.name}>\r\n                  {key.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </main>\r\n  );\r\n  // } else {\r\n  //   return <h1>tt</h1>;\r\n  // }\r\n};\r\n\r\nexport default ArchiveTv;\r\n","C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\tv\\SearchTv.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\movie\\SearchMovie.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\components\\button\\MoreButton.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\template\\pages\\SearchALL.jsx",[],"C:\\Users\\hydra\\OneDrive\\デスクトップ\\app-movie\\src\\hooks\\reducer\\cast.js",[],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":18,"column":6,"nodeType":"258","endLine":18,"endColumn":8,"suggestions":"259"},{"ruleId":"256","severity":1,"message":"260","line":54,"column":22,"nodeType":"258","endLine":54,"endColumn":43,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},{"ruleId":"262","severity":1,"message":"266","line":6,"column":8,"nodeType":"264","messageId":"265","endLine":6,"endColumn":18},{"ruleId":"262","severity":1,"message":"263","line":2,"column":16,"nodeType":"264","messageId":"265","endLine":2,"endColumn":26},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["269"],"React Hook useEffect has missing dependencies: 'dispatch' and 'string'. Either include them or remove the dependency array.",["270"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'theMovieDb' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [state]",{"range":"275","text":"276"},"Update the dependencies array to be: [dispatch, state.search.string, string]",{"range":"277","text":"278"},[575,577],"[state]",[1494,1515],"[dispatch, state.search.string, string]"]